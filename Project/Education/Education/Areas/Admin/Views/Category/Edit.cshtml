@model Education.Areas.Admin.Model.Category

@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Edit", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="content-header">
        <table cellspacing="0">
            <tbody>
                <tr>
                    <td style="width:50%;"><h3 class="icon-head head-cms-page">Sửa thông tin danh mục</h3></td>
                    <td class="form-buttons">
                        <button class="scalable Back" name="submit" onclick="setLocation('/Admin/Category')" type="button" value="Back"><span>Quay lại</span></button>
                        <button class="scalable Reset" name="submit" type="reset" value="Reset"><span>Reset</span></button>
                        <button class="scalable Delete" name="submit" onclick="setLocation('/Admin/Category/Delete/@Model.ID')" type="button" value="Delete"><span>Xóa trang</span></button>
                        <button class="scalable Save" name="submit" type="submit" value="Save"><span>Lưu trang</span></button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="entry-edit">
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Modified)
        <div class="entry-edit-head">
            <h4 class="icon-head head-edit-form fieldset-legend"><a href="#">Sửa thông tin danh mục</a></h4>
            <div class="form-buttons"></div>
        </div>
        <div class="fieldset " id="user_base_fieldset">
            <div class="hor-scroll">
                <table cellspacing="0" class="form-list">
                    <tbody>
                        <tr>
                            <td class="label">
                                @Html.LabelFor(model => model.Name)
                                
                            </td>
                            <td class="value">
                                @Html.TextBoxFor(model => model.Name, new { @class = "input-text" })
                                <br />@Html.ValidationMessageFor(model => model.Name)
                            </td>
                        </tr>
                        <tr>
                            <td class="label">
                                @Html.LabelFor(model => model.Description)
                            </td>
                            <td class="value">
                                @Html.TextBoxFor(model => model.Description, new { @class = "input-text" })
                                <br />@Html.ValidationMessageFor(model => model.Description)
                            </td>
                        </tr>
                        <tr style="display: none;">
                            <td class="label">
                                @Html.LabelFor(model => model.CategoryTypeID)
                            </td>
                            <td class="value">
                                @Html.TextBoxFor(model => model.CategoryTypeID, new { @class = "input-number" })
                                <br />@Html.ValidationMessageFor(model => model.CategoryTypeID)
                            </td>
                        </tr>
                        <tr>
                            <td class="label">
                                @Html.LabelFor(model => model.Alias)
                                
                            </td>
                            <td class="value">
                                @Html.TextBoxFor(model => model.Alias, new { @class = "input-text" })
                                <br />@Html.ValidationMessageFor(model => model.Alias)
                            </td>
                        </tr>
                        <tr>
                            <td class="label">
                                @Html.LabelFor(model => model.Status)
                            </td>
                            <td class="value">
                                @Html.CheckBoxFor(m => m.Status)
                                <br />@Html.ValidationMessageFor(model => model.Status)
                            </td>
                        </tr>
                        <tr>
                            <td class="label">
                                @Html.LabelFor(model => model.ForAdminPost)
                            </td>
                            <td class="value">
                                @Html.CheckBoxFor(m => m.ForAdminPost)
                                <br />@Html.ValidationMessageFor(model => model.ForAdminPost)
                            </td>
                        </tr>
                        <tr>
                            <td class="label">
                                @Html.LabelFor(model => model.IsHighLight)
                            </td>
                            <td class="value">
                                @Html.CheckBoxFor(m => m.IsHighLight)
                                <br />@Html.ValidationMessageFor(model => model.IsHighLight)
                            </td>
                        </tr>
                        <tr>
                            <td class="label">@Html.LabelFor(model => model.ImageUrl)</td>
                            <td class="value">
                                @Html.HiddenFor(model => model.ImageUrl)
                                @if (!string.IsNullOrEmpty(Model.ImageUrl))
                                {
                                    <img style="max-width: 200px;" id="img-path" src="@Url.Content(Model.ImageUrl)" alt="" />
                                }
                                else
                                {
                                    <img style="max-width: 200px;" id="img-path" src="@Url.Content("~/Assets/Admin/Images/default.gif")" alt="" />
                                }

                                <div>
                                    <input style="max-width: 200px;" type="file" id="image" name="datafile" accept="image/*" onchange="uploadFileBase64()" />
                                </div>
                                <br />@Html.ValidationMessageFor(model => model.ImageUrl)
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script>
        function uploadFileBase64() {
            var files = document.getElementById("image").files;
            for (var i = 0; i < files.length; i++) {
                if (files && files[i]) {
                    var FR = new FileReader();
                    var srcData;
                    FR.onload = function (e) {
                        srcData = e.target.result;
                        $('#img-path').attr('src', srcData);
                    };
                    FR.readAsDataURL(files[i]);
                }
            }
        }
        //$("form").submit(function (event) {
        //    if ($("#image").val()) {
        //        var iSize = ($("#image")[0].files[0].size / 1024);
        //        iSize = (Math.round((iSize / 1024) * 100) / 100);
        //        console.log(iSize)
        //        if (iSize > 1) {
        //            $('span#validityMessages').html("kích thước ảnh phải nhỏ hơn 1MB");
        //            return false;
        //        }
        //        else {
        //            console.log(iSize + "Mb")
        //            $("form").submit(); // post form
        //            ;
        //        }
        //    }
        //});
    </script>
}